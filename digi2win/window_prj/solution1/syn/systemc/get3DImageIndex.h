// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _get3DImageIndex_HH_
#define _get3DImageIndex_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct get3DImageIndex : public sc_module {
    // Port declarations 5
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<4> > layer;
    sc_in< sc_lv<11> > roll;
    sc_in< sc_lv<11> > strip;
    sc_out< sc_lv<16> > ap_return;


    // Module declarations
    get3DImageIndex(sc_module_name name);
    SC_HAS_PROCESS(get3DImageIndex);

    ~get3DImageIndex();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > trunc_ln15_fu_44_p1;
    sc_signal< sc_lv<15> > shl_ln_fu_48_p3;
    sc_signal< sc_lv<13> > shl_ln15_1_fu_60_p3;
    sc_signal< sc_lv<16> > zext_ln15_fu_56_p1;
    sc_signal< sc_lv<16> > zext_ln15_1_fu_68_p1;
    sc_signal< sc_lv<4> > trunc_ln15_1_fu_78_p1;
    sc_signal< sc_lv<11> > shl_ln15_fu_90_p2;
    sc_signal< sc_lv<13> > shl_ln15_2_fu_82_p3;
    sc_signal< sc_lv<13> > zext_ln15_2_fu_96_p1;
    sc_signal< sc_lv<13> > sub_ln15_1_fu_100_p2;
    sc_signal< sc_lv<16> > sub_ln15_fu_72_p2;
    sc_signal< sc_lv<16> > sext_ln15_fu_106_p1;
    sc_signal< sc_lv<16> > add_ln15_fu_110_p2;
    sc_signal< sc_lv<16> > add_ln15_1_fu_116_p2;
    sc_signal< sc_lv<16> > zext_ln15_3_fu_122_p1;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<11> ap_const_lv11_7;
    static const sc_lv<16> ap_const_lv16_F27F;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_add_ln15_1_fu_116_p2();
    void thread_add_ln15_fu_110_p2();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_sext_ln15_fu_106_p1();
    void thread_shl_ln15_1_fu_60_p3();
    void thread_shl_ln15_2_fu_82_p3();
    void thread_shl_ln15_fu_90_p2();
    void thread_shl_ln_fu_48_p3();
    void thread_sub_ln15_1_fu_100_p2();
    void thread_sub_ln15_fu_72_p2();
    void thread_trunc_ln15_1_fu_78_p1();
    void thread_trunc_ln15_fu_44_p1();
    void thread_zext_ln15_1_fu_68_p1();
    void thread_zext_ln15_2_fu_96_p1();
    void thread_zext_ln15_3_fu_122_p1();
    void thread_zext_ln15_fu_56_p1();
};

}

using namespace ap_rtl;

#endif
