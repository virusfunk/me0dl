-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity get3DImageIndex is
port (
    ap_ready : OUT STD_LOGIC;
    layer : IN STD_LOGIC_VECTOR (3 downto 0);
    roll : IN STD_LOGIC_VECTOR (10 downto 0);
    strip : IN STD_LOGIC_VECTOR (10 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of get3DImageIndex is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000111";
    constant ap_const_lv16_F27F : STD_LOGIC_VECTOR (15 downto 0) := "1111001001111111";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal trunc_ln15_fu_44_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln_fu_48_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln15_1_fu_60_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln15_fu_56_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln15_1_fu_68_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln15_1_fu_78_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln15_fu_90_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln15_2_fu_82_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln15_2_fu_96_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln15_1_fu_100_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln15_fu_72_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln15_fu_106_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln15_fu_110_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln15_1_fu_116_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln15_3_fu_122_p1 : STD_LOGIC_VECTOR (15 downto 0);


begin



    add_ln15_1_fu_116_p2 <= std_logic_vector(signed(sext_ln15_fu_106_p1) + signed(add_ln15_fu_110_p2));
    add_ln15_fu_110_p2 <= std_logic_vector(signed(ap_const_lv16_F27F) + signed(sub_ln15_fu_72_p2));
    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(add_ln15_1_fu_116_p2) + unsigned(zext_ln15_3_fu_122_p1));
        sext_ln15_fu_106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln15_1_fu_100_p2),16));

    shl_ln15_1_fu_60_p3 <= (trunc_ln15_fu_44_p1 & ap_const_lv10_0);
    shl_ln15_2_fu_82_p3 <= (trunc_ln15_1_fu_78_p1 & ap_const_lv9_0);
    shl_ln15_fu_90_p2 <= std_logic_vector(shift_left(unsigned(roll),to_integer(unsigned('0' & ap_const_lv11_7(11-1 downto 0)))));
    shl_ln_fu_48_p3 <= (trunc_ln15_fu_44_p1 & ap_const_lv12_0);
    sub_ln15_1_fu_100_p2 <= std_logic_vector(unsigned(shl_ln15_2_fu_82_p3) - unsigned(zext_ln15_2_fu_96_p1));
    sub_ln15_fu_72_p2 <= std_logic_vector(unsigned(zext_ln15_fu_56_p1) - unsigned(zext_ln15_1_fu_68_p1));
    trunc_ln15_1_fu_78_p1 <= roll(4 - 1 downto 0);
    trunc_ln15_fu_44_p1 <= layer(3 - 1 downto 0);
    zext_ln15_1_fu_68_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln15_1_fu_60_p3),16));
    zext_ln15_2_fu_96_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln15_fu_90_p2),13));
    zext_ln15_3_fu_122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(strip),16));
    zext_ln15_fu_56_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_48_p3),16));
end behav;
